{"meta":{"title":"Keep Forward","subtitle":"吴江龙","description":"练习写作的地方","author":"JiangLong Wu","url":"https://wujlmochasoft.github.io","root":"/"},"pages":[{"title":"about","date":"2020-05-16T12:56:20.000Z","updated":"2020-05-16T12:56:20.290Z","comments":true,"path":"about/index.html","permalink":"https://wujlmochasoft.github.io/about/index.html","excerpt":"","text":""},{"title":"","date":"2020-05-16T12:56:06.821Z","updated":"2020-05-16T12:56:06.641Z","comments":false,"path":"categories/index.html","permalink":"https://wujlmochasoft.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-05-16T12:55:11.723Z","updated":"2020-05-16T12:55:11.455Z","comments":false,"path":"tags/index.html","permalink":"https://wujlmochasoft.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"【博客搭建系列】（四）ICARUS主题个性化","slug":"Linux-construct-hexo-4","date":"2020-05-18T12:46:15.303Z","updated":"2020-05-18T12:50:12.934Z","comments":true,"path":"2020/05/18/Linux-construct-hexo-4/","link":"","permalink":"https://wujlmochasoft.github.io/2020/05/18/Linux-construct-hexo-4/","excerpt":"为了能让博客可用、易用及美观，这篇文章记录了对ICARUS主题中默认的样式及插件等进行个性化调整的方法和过程。","text":"为了能让博客可用、易用及美观，这篇文章记录了对ICARUS主题中默认的样式及插件等进行个性化调整的方法和过程。 布局主页宽度调整之前 4-1 调整之后 4-2 主页布局修改前 image-20200514144004513 修改后 image-20200514144115102 代码样式修改前 image-20200513230838428 修改后 image-20200513230901412 挂件修改前 image-20200514151908237 修改后 image-20200514151100751 插件ICARUS支持的插件类型有很多，如下所示。 image-20200512204837181 下面仅列举目前本博客选择安装的插件。 分享插件ICARUS支持的分享插件有很多，比如AddThis,AddToAny,百度分享,Share.js等，横向比较之后，ShareThis的风格更适合本博客。 插件安装过程比较简单，ICARUS主题文档清晰明了，此处不再赘述，详情请查阅文末的参考资料。安装完成后的效果如下图。 4-5 评论插件评论插件在Disqus和Valine之间，选择了更适合国内环境的Valine。 安装过程比较简单，ICARUS主题文档清晰明了，此处不再赘述，详情请查阅文末的参考资料。 4-4 文章样式修改修改路径/themes/icarus/include/style/article.styl /* --------------------------------- * Article Summary and Content * --------------------------------- */ $article-font-size ?= 1.1rem article &amp;.media .media-content color: $text-light .title margin: 0 line-height: inherit &amp;.article .article-meta, .article-tags color: $text-light .article-meta overflow-x: auto margin-bottom: .5rem .article-more @extend .button.is-light .content word-wrap: break-word font-size: $article-font-size color: #34495E a color: #42B983 font-weight: bold p margin-bottom: 0.4rem h1 font-size: 1.75em h2 font-size: 1.6em h3 font-size: 1.5em font-weight: bolder margin-bottom: 0em color: #777777 h4 font-size: 1.3em font-weight: bolder margin-bottom: 0.2em color: #34495E margin-top: 0.7em h5 font-size: 1em pre font-size: 1em font-family: Source Code Pro code padding: 0 background: transparent overflow-wrap: break-word color: #EB7D23 font-size: 1em font-weight: bolder font-family: Source Code Pro margin-left: 3px margin-right: 3px blockquote background-color: #ECF8F2 border-left-color: #42B983 margin-bottom: 0.5em margin-top: 1.2em padding-top: 0.8em padding-right: 0.8em padding-bottom: 0.8em padding-left: 0.8em &amp;.pullquote float: right max-width: 50% font-size: 1.15rem position: relative footer strong + cite margin-left: .5em .message.message-immersive border-radius: 0 margin: 0 0-($card-content-padding) $card-content-padding 0-($card-content-padding) .message-body border: none .rtl direction: rtl .level &amp;, &amp;.is-mobile .level-item:not(:last-child) margin-left: .75rem margin-right: 0 .thumbnail object-fit: cover width: 100% !important height: 100% !important // Overflow table .table-overflow overflow-x: auto table width: auto !important th word-break: keep-all // Video container .video-container position: relative padding-bottom: 56.25% padding-top: 25px height: 0 iframe position: absolute top: 0 left: 0 width: 100% height: 100% 前后对比修改前 修改后 参考资料 [1] ICARUS主题文档[2] hexo主题Icarus浅度修改教程","categories":[{"name":"自己动手","slug":"自己动手","permalink":"https://wujlmochasoft.github.io/categories/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B/"}],"tags":[{"name":"博客搭建系列","slug":"博客搭建系列","permalink":"https://wujlmochasoft.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"}]},{"title":"【博客搭建系列】（三）博客免费上线——GitHub","slug":"Linux-construct-hexo-3","date":"2020-05-18T12:43:44.734Z","updated":"2020-05-18T12:49:16.561Z","comments":true,"path":"2020/05/18/Linux-construct-hexo-3/","link":"","permalink":"https://wujlmochasoft.github.io/2020/05/18/Linux-construct-hexo-3/","excerpt":"上一篇文章【博客搭建系列】（二）Hexo主题安装介绍了如何安装Hexo主题，对主题做了一些个性化的调整，整体上来说已经基本成型，其他细节性的东西可以在后期慢慢调整。博客雏形有了，接下来的问题就是如何发布到互联网上去，让更多人可以访问。下面就来介绍一种方便且免费的上线方式——Hexo + GitHub Pages。","text":"上一篇文章【博客搭建系列】（二）Hexo主题安装介绍了如何安装Hexo主题，对主题做了一些个性化的调整，整体上来说已经基本成型，其他细节性的东西可以在后期慢慢调整。博客雏形有了，接下来的问题就是如何发布到互联网上去，让更多人可以访问。下面就来介绍一种方便且免费的上线方式——Hexo + GitHub Pages。 创建GitHub空间想要使用GitHub Pages必须先注册一个GitHub账号，注册过程略，注册完成后登录。 登录后点击右上角+，选择New repository新建github仓库。 需要填写的内容有三部分： 仓库名称。这里的写法是固定的，必须填写用户名.github.io 仓库描述。这里写对仓库的描述，选填。 初始化仓库。对仓库进行初始化，必须勾选。 image-20200510221001196 填写完成之后，点击Create repository创建仓库。 仓库创建成功之后，即可在浏览器通过github账号名.github.io来访问该仓库。（PS：上面的这个网址就是以后访问博客的地址。） 配置发布权限完成上面的一步，相当于已经有了一个线上的空间。接下来只需要把博客内容部署到这个空间来就可以了。但是在这之前需要先进行一个发布权限的配置，也就是告诉GitHub确认从哪台机器上把东西传输到这个空间。 Git配置这一步需要在git中配置用户名和邮箱地址，具体命令如下。 $ git config --global user.name &quot;github用户名&quot; $ git config --global user.email test@example.com # 邮箱地址 生成密钥这一步生成SSH密钥，命令如下。 ssh-keygen -t rsa # 一直回车直到结束 image-20200510225323007 在上面标注的路径下，使用cat命令查看id_rsa.pub文件，然后将其内容复制下一步要用。 cat /root/.ssh/id_rsa.pub 添加密钥这一步要在github中添加本地的公共密钥。 点击github账号头像，选择setting。 点击New SSH key按钮。 将上一步复制的密钥添加进去。 3-3 添加完成后使用下面的命令验证，若无异常，则添加成功。 [root@blog icarus]# ssh -T git@github.com The authenticity of host &#39;github.com (13.229.188.59)&#39; can&#39;t be established. RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. RSA key fingerprint is MD5:16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added &#39;github.com,13.229.188.59&#39; (RSA) to the list of known hosts. Hi wujlmochasoft! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 发布上线配置发布地址配置完github端的发布权限，现在来配置Hexo服务端的部署地址。 在Hexo服务根目录下，打开_config.yml文件，修改deploy部分，如下。 deploy: type: git repository: git@github.com:用户名/用户名.github.io.git branch: master 安装插件想要让Hexo把Blog发布到github还需要依赖一个插件来完成。在Hexo服务根目录下（/root/blog）执行下面的命令进行安装。 npm install hexo-deployer-git --save 若无报错，则安装成功。 发布上线最后，一切都准备就绪。下面就用一行命令来发布吧。 hexo d -g 若看到如下信息，则部署成功。 image-20200510231904795 线上博客最后，在浏览器中输入https://用户名.github.io来访问线上博客。 3-5 至此，博客上线已全部结束。 参考资料 [1] 使用Hexo+Github一步步搭建属于自己的博客（基础）[2] 使用hexo搭建github博客","categories":[{"name":"自己动手","slug":"自己动手","permalink":"https://wujlmochasoft.github.io/categories/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B/"}],"tags":[{"name":"博客搭建系列","slug":"博客搭建系列","permalink":"https://wujlmochasoft.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"}]},{"title":"【博客搭建系列】（二）Hexo主题安装","slug":"Linux-construct-hexo-2","date":"2020-05-18T12:42:35.570Z","updated":"2020-05-18T12:48:20.221Z","comments":true,"path":"2020/05/18/Linux-construct-hexo-2/","link":"","permalink":"https://wujlmochasoft.github.io/2020/05/18/Linux-construct-hexo-2/","excerpt":"上一篇文章【博客搭建系列】（一）Linux下搭建Hexo介绍了如何搭建Hexo服务，紧接着就需要给博客选择一个合适的主题。Hexo官网提供了非常丰富的博客主题供大家选择。 这里选择的是ICARUS主题，下面就来介绍如何安装。","text":"上一篇文章【博客搭建系列】（一）Linux下搭建Hexo介绍了如何搭建Hexo服务，紧接着就需要给博客选择一个合适的主题。Hexo官网提供了非常丰富的博客主题供大家选择。 这里选择的是ICARUS主题，下面就来介绍如何安装。 准备工作ICARUS主题需要一些三方依赖，这里提前安装。 进入Hexo服务根目录（/root/blog），然后安装以下依赖。 cd /root/blog npm install --save bulma-stylus@0.8.0 hexo-component-inferno@0.2.4 hexo-renderer-inferno@0.1.3 inferno@7.3.3 inferno-create-element@7.3.3 安装主题安装方式有两种，看实际情况进行选择。 在线安装进入blog目录，通过git命令将主题文件下载到指定目录。 cd /root/blog git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 离线安装如果在线安装速度太慢，可以选择离线安装。 下载地址点击这里。 将下载好的ZIP包放到目标目录下并解压。 cd /root/blog/themes mkdir icarus unzip hexo-theme-icarus-master.zip 配置主题主题安装完成之后需要修改配置文件，让hexo使用新安装的主题效果。 打开_config.yml文件 vim /root/blog/_config.yml # 打开文件 将theme:landscape修改为theme:icarus 启动测试启动hexo服务，如无异常，界面如下。 2-1 访问博客主页（http://ipAdress:4000），效果如下。 2-2 至此，Hexo主题安装就完成了。 ICARUS个性化上面介绍了如何安装ICARUS主题。 主题只是模板，个性化展示还需要针对性地调整。 ICARUS主页提供详细的文档，下面仅介绍汉化部分。 全局汉化安装完成的主题是英文版的，因此首先需要将其汉化。 打开站点根目录下的站点配置文件_config.yml，修改如下设置： language: zh-CN 修改完成后，重启服务即可。 页眉汉化打开ICARUS主题目录下的_config.yml，做如下修改，修改后刷新页面即可看到效果。 # Page top navigation bar configurations navbar: # Naviagtion menu items menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 关于: /about # Links to be shown on the right of the navigation bar links: Download on GitHub: icon: fab fa-github url: &#39;https://github.com/wujlmochasoft&#39; 2-3 参考资料 ​ [1] Hexo-修改Hexo主题 ​ [2] ICARUS-GitHub主页 ​ [3] ICARUS演示说明页","categories":[{"name":"自己动手","slug":"自己动手","permalink":"https://wujlmochasoft.github.io/categories/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B/"}],"tags":[{"name":"博客搭建系列","slug":"博客搭建系列","permalink":"https://wujlmochasoft.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"}]},{"title":"【博客搭建系列】（一）Linux下搭建Hexo","slug":"Linux-construct-hexo-1","date":"2020-05-18T12:37:22.085Z","updated":"2020-05-18T12:38:16.597Z","comments":true,"path":"2020/05/18/Linux-construct-hexo-1/","link":"","permalink":"https://wujlmochasoft.github.io/2020/05/18/Linux-construct-hexo-1/","excerpt":"最近心血来潮，想重新把博客写起来。找了很多工具和模板，最终确定用Hexo来搭建新的博客。 这篇文章完整地记录了如何在Linux上使用Hexo来搭建博客站点的整个过程，希望可以对有需要的朋友提供参考。","text":"最近心血来潮，想重新把博客写起来。找了很多工具和模板，最终确定用Hexo来搭建新的博客。 这篇文章完整地记录了如何在Linux上使用Hexo来搭建博客站点的整个过程，希望可以对有需要的朋友提供参考。 准备工作搭建Hexo服务依赖下面的几个组件，需要提前安装。 NodeJS安装根据不同的操作系统选择相应的安装包，这里以node-v12.16.3-linux-x64为例。 下载地址戳这里。 NodeJS官网 下载完成后，解压到目标目录，命令如下 xz -d node-v12.16.3-linux-x64.tar.xz tar -zxvf node-v12.16.3-linux-x64.tar.xz -C /opt # 解压到 /opt 文件夹下 接着，配置环境变量，在profile文件最后进行追加 vim /etc/profile export NODEJS_HOME=/opt/node-v12.16.3-linux-x64 # 1 export PATH=$PATH:$NODEJS_HOME/bin # 2 刷新配置文件 source /etc/profile 接着输入如下命令验证，若返回版本号，则安装成功 [root@blog ~]# node -v v12.16.3 Git安装在联网的情况下，可以通过下面的命令进行安装 sudo yum install git-core 安装完成后，输入如下命令验证，若返回版本号，则安装成功 [root@blog ~]# git --version git version 1.8.3.1 至此，准备工作完成，下面安装Hexo。 搭建Hexo服务安装Hexo在任意位置新建blog目录 mkdir /root/blog 进入blog目录，安装Hexo cd /root/blog npm install hexo -g # 这步大概一分钟，耐心等待 安装完成后，输入如下命令验证，若返回如下版本号，则安装成功 [root@blog blog]# hexo -v hexo-cli: 3.1.0 初始化Hexo在命令行中键入下面的命令，执行完成后，若如无异常报错，则初始化成功 # 耗时较长，耐心等待 [root@blog blog]# hexo init INFO Cloning hexo-starter https://github.com/hexojs/hexo-starter.git ... INFO Start blogging with Hexo! 成功后会在当前目录下（/root/blog）生成如下目录文件 . ├── _config.yml ├── package.json ├── scaffolds ├── source | ├── _drafts | └── _posts └── themes 安装Hexo需要的本地依赖包 npm install # 在/root/blog目录下 启动Hexo输入如下命令启动Hexo服务，若无报错，则启动成功 [root@blog blog]# hexo s INFO Start processing INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 访问Hexo在浏览器中访问http://ipAdress:4000（ipAdress为搭建Hexo的IP地址） 效果图 访问若如上图所示，显示Hexo默认博客页面，则表示Hexo启动成功。 至此，Hexo服务的搭建全部完成。 参考资料 ​ [1] 使用hexo搭建github博客 ​ [2] Hexo官方文档","categories":[{"name":"自己动手","slug":"自己动手","permalink":"https://wujlmochasoft.github.io/categories/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B/"}],"tags":[{"name":"博客搭建系列","slug":"博客搭建系列","permalink":"https://wujlmochasoft.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"}]}],"categories":[{"name":"自己动手","slug":"自己动手","permalink":"https://wujlmochasoft.github.io/categories/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B/"}],"tags":[{"name":"博客搭建系列","slug":"博客搭建系列","permalink":"https://wujlmochasoft.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"}]}